digraph {
labelloc = t;
labelfontsize = 30;
label = "exploit.js:1 -  Generate LIR";
  rankdir=TB
  splines=true

  "Block0" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 0 </font></td></tr><tr><td align="right" port="i1">1</td><td align="left">start</td></tr><tr><td align="right" port="i2">2</td><td align="left">checkoverrecursed</td></tr><tr><td align="right" port="i3">3</td><td align="left">osipoint</td></tr><tr><td align="right" port="i4">4</td><td align="left">globalnameconflictscheck</td></tr><tr><td align="right" port="i5">5</td><td align="left">osipoint</td></tr><tr><td align="right" port="i6">6</td><td align="left">{v1&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i7">7</td><td align="left">defvar (v1:r)</td></tr><tr><td align="right" port="i8">8</td><td align="left">osipoint</td></tr><tr><td align="right" port="i9">9</td><td align="left">{v2&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i10">10</td><td align="left">deflexical (v2:r)</td></tr><tr><td align="right" port="i11">11</td><td align="left">osipoint</td></tr><tr><td align="right" port="i12">12</td><td align="left">{v3&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i13">13</td><td align="left">deflexical (v3:r)</td></tr><tr><td align="right" port="i14">14</td><td align="left">osipoint</td></tr><tr><td align="right" port="i15">15</td><td align="left">{v4&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i16">16</td><td align="left">deflexical (v4:r)</td></tr><tr><td align="right" port="i17">17</td><td align="left">osipoint</td></tr><tr><td align="right" port="i18">18</td><td align="left">{v5&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i19">19</td><td align="left">deflexical (v5:r)</td></tr><tr><td align="right" port="i20">20</td><td align="left">osipoint</td></tr><tr><td align="right" port="i21">21</td><td align="left">{v6&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i22">22</td><td align="left">deflexical (v6:r)</td></tr><tr><td align="right" port="i23">23</td><td align="left">osipoint</td></tr><tr><td align="right" port="i24">24</td><td align="left">{v7&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i25">25</td><td align="left">deflexical (v7:r)</td></tr><tr><td align="right" port="i26">26</td><td align="left">osipoint</td></tr><tr><td align="right" port="i27">27</td><td align="left">{v8&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i28">28</td><td align="left">deflexical (v8:r)</td></tr><tr><td align="right" port="i29">29</td><td align="left">osipoint</td></tr><tr><td align="right" port="i30">30</td><td align="left">{v9&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i31">31</td><td align="left">{v10&lt;o&gt;:rax} &lt;- lambdaforsingleton (v9:r)</td></tr><tr><td align="right" port="i32">32</td><td align="left">osipoint</td></tr><tr><td align="right" port="i33">33</td><td align="left">{v11&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i34">34</td><td align="left">deffun (v10:r), (v11:r)</td></tr><tr><td align="right" port="i35">35</td><td align="left">osipoint</td></tr><tr><td align="right" port="i36">36</td><td align="left">{v12&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i37">37</td><td align="left">{v13&lt;o&gt;:rax} &lt;- lambdaforsingleton (v12:r)</td></tr><tr><td align="right" port="i38">38</td><td align="left">osipoint</td></tr><tr><td align="right" port="i39">39</td><td align="left">{v14&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i40">40</td><td align="left">deffun (v13:r), (v14:r)</td></tr><tr><td align="right" port="i41">41</td><td align="left">osipoint</td></tr><tr><td align="right" port="i42">42</td><td align="left">{v16&lt;o&gt;} &lt;- newarray t=(v15&lt;g&gt;)</td></tr><tr><td align="right" port="i43">43</td><td align="left">osipoint</td></tr><tr><td align="right" port="i44">44</td><td align="left">{v19&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i45">45</td><td align="left">setpropertycache (v19:r), (c), (v16:r) t=(v18&lt;g&gt;, v17&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i46">46</td><td align="left">osipoint</td></tr><tr><td align="right" port="i47">47</td><td align="left">{v21&lt;o&gt;} &lt;- newarray t=(v20&lt;g&gt;)</td></tr><tr><td align="right" port="i48">48</td><td align="left">osipoint</td></tr><tr><td align="right" port="i49">49</td><td align="left">{v22&lt;d&gt;} &lt;- double</td></tr><tr><td align="right" port="i50">50</td><td align="left">{v23&lt;s&gt;} &lt;- elements (v21:r)</td></tr><tr><td align="right" port="i51">51</td><td align="left">storeelementt (v23:r), (c), (v22:r)</td></tr><tr><td align="right" port="i52">52</td><td align="left">setinitializedlength (v23:r), (c)</td></tr><tr><td align="right" port="i53">53</td><td align="left">{v24&lt;d&gt;} &lt;- double</td></tr><tr><td align="right" port="i54">54</td><td align="left">{v25&lt;s&gt;} &lt;- elements (v21:r)</td></tr><tr><td align="right" port="i55">55</td><td align="left">storeelementt (v25:r), (c), (v24:r)</td></tr><tr><td align="right" port="i56">56</td><td align="left">setinitializedlength (v25:r), (c)</td></tr><tr><td align="right" port="i57">57</td><td align="left">{v26&lt;s&gt;} &lt;- elements (v21:r)</td></tr><tr><td align="right" port="i58">58</td><td align="left">storeelementt (v26:r), (c), (c)</td></tr><tr><td align="right" port="i59">59</td><td align="left">setinitializedlength (v26:r), (c)</td></tr><tr><td align="right" port="i60">60</td><td align="left">{v27&lt;d&gt;} &lt;- double</td></tr><tr><td align="right" port="i61">61</td><td align="left">{v28&lt;s&gt;} &lt;- elements (v21:r)</td></tr><tr><td align="right" port="i62">62</td><td align="left">storeelementt (v28:r), (c), (v27:r)</td></tr><tr><td align="right" port="i63">63</td><td align="left">setinitializedlength (v28:r), (c)</td></tr><tr><td align="right" port="i64">64</td><td align="left">{v31&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i65">65</td><td align="left">setpropertycache (v31:r), (c), (v21:r) t=(v30&lt;g&gt;, v29&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i66">66</td><td align="left">osipoint</td></tr><tr><td align="right" port="i67">67</td><td align="left">{v33&lt;o&gt;} &lt;- newarray t=(v32&lt;g&gt;)</td></tr><tr><td align="right" port="i68">68</td><td align="left">osipoint</td></tr><tr><td align="right" port="i69">69</td><td align="left">{v36&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i70">70</td><td align="left">setpropertycache (v36:r), (c), (v33:r) t=(v35&lt;g&gt;, v34&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i71">71</td><td align="left">osipoint</td></tr><tr><td align="right" port="i72">72</td><td align="left">{v38&lt;o&gt;} &lt;- newarray t=(v37&lt;g&gt;)</td></tr><tr><td align="right" port="i73">73</td><td align="left">osipoint</td></tr><tr><td align="right" port="i74">74</td><td align="left">{v41&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i75">75</td><td align="left">setpropertycache (v41:r), (c), (v38:r) t=(v40&lt;g&gt;, v39&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i76">76</td><td align="left">osipoint</td></tr><tr><td align="right" port="i77">77</td><td align="left">{v43&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i78">78</td><td align="left">{v44&lt;x&gt;} &lt;- getnamecache (v43:r) t=(v42&lt;g&gt;)</td></tr><tr><td align="right" port="i79">79</td><td align="left">osipoint</td></tr><tr><td align="right" port="i80">80</td><td align="left">{bogus} &lt;- typebarrierv (v44:r) t=(v45&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i81">81</td><td align="left">{v46&lt;o&gt;} &lt;- unbox (v44:r)</td></tr><tr><td align="right" port="i82">82</td><td align="left">{v47&lt;x&gt;:rcx} &lt;- createthis (v46:r), (v46:r)</td></tr><tr><td align="right" port="i83">83</td><td align="left">osipoint</td></tr><tr><td align="right" port="i84">84</td><td align="left">stackargv (v47:r)</td></tr><tr><td align="right" port="i85">85</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i86">86</td><td align="left">stackargv (v44:r)</td></tr><tr><td align="right" port="i87">87</td><td align="left">{v50&lt;x&gt;:rcx} &lt;- callgeneric (v46:rax) t=(v49&lt;g&gt;:rdi, v48&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i88">88</td><td align="left">osipoint</td></tr><tr><td align="right" port="i89">89</td><td align="left">{bogus} &lt;- typebarrierv (v50:r) t=(v51&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i90">90</td><td align="left">{v54&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i91">91</td><td align="left">setpropertycache (v54:r), (c), (v50:r) t=(v53&lt;g&gt;, v52&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i92">92</td><td align="left">osipoint</td></tr><tr><td align="right" port="i93">93</td><td align="left">{v56&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i94">94</td><td align="left">{v57&lt;x&gt;} &lt;- getnamecache (v56:r) t=(v55&lt;g&gt;)</td></tr><tr><td align="right" port="i95">95</td><td align="left">osipoint</td></tr><tr><td align="right" port="i96">96</td><td align="left">{bogus} &lt;- typebarrierv (v57:r) t=(v58&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i97">97</td><td align="left">{v59&lt;o&gt;} &lt;- unbox (v57:r)</td></tr><tr><td align="right" port="i98">98</td><td align="left">{v60&lt;x&gt;:rcx} &lt;- createthis (v59:r), (v59:r)</td></tr><tr><td align="right" port="i99">99</td><td align="left">osipoint</td></tr><tr><td align="right" port="i100">100</td><td align="left">stackargv (v60:r)</td></tr><tr><td align="right" port="i101">101</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i102">102</td><td align="left">stackargv (v57:r)</td></tr><tr><td align="right" port="i103">103</td><td align="left">{v63&lt;x&gt;:rcx} &lt;- callgeneric (v59:rax) t=(v62&lt;g&gt;:rdi, v61&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i104">104</td><td align="left">osipoint</td></tr><tr><td align="right" port="i105">105</td><td align="left">{bogus} &lt;- typebarrierv (v63:r) t=(v64&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i106">106</td><td align="left">{v67&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i107">107</td><td align="left">setpropertycache (v67:r), (c), (v63:r) t=(v66&lt;g&gt;, v65&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i108">108</td><td align="left">osipoint</td></tr><tr><td align="right" port="i109">109</td><td align="left">{v70&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i110">110</td><td align="left">setpropertycache (v70:r), (c), (c) t=(v69&lt;g&gt;, v68&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i111">111</td><td align="left">osipoint</td></tr><tr><td align="right" port="i112">112</td><td align="left">{v71&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i113">113</td><td align="left">{v72&lt;s&gt;} &lt;- slots (v71:r)</td></tr><tr><td align="right" port="i114">114</td><td align="left">{v73&lt;o&gt;} &lt;- loadslott (v72:r)</td></tr><tr><td align="right" port="i115">115</td><td align="left">{v74&lt;x&gt;} &lt;- box (v73:r)</td></tr><tr><td align="right" port="i116">116</td><td align="left">{v75&lt;x&gt;:rcx} &lt;- callgetproperty (v74:r)</td></tr><tr><td align="right" port="i117">117</td><td align="left">osipoint</td></tr><tr><td align="right" port="i118">118</td><td align="left">{bogus} &lt;- typebarrierv (v75:r) t=(v76&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i119">119</td><td align="left">{v77&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i120">120</td><td align="left">{v78&lt;o&gt;:rax} &lt;- lambdaforsingleton (v77:r)</td></tr><tr><td align="right" port="i121">121</td><td align="left">osipoint</td></tr><tr><td align="right" port="i122">122</td><td align="left">{v79&lt;o&gt;} &lt;- unbox (v75:r)</td></tr><tr><td align="right" port="i123">123</td><td align="left">stackargt (v73:r)</td></tr><tr><td align="right" port="i124">124</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i125">125</td><td align="left">stackargt (v78:r)</td></tr><tr><td align="right" port="i126">126</td><td align="left">{v82&lt;x&gt;:rcx} &lt;- callgeneric (v79:rax) t=(v81&lt;g&gt;:rdi, v80&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i127">127</td><td align="left">osipoint</td></tr><tr><td align="right" port="i128">128</td><td align="left">{v83&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i129">129</td><td align="left">{v84&lt;o&gt;:rax} &lt;- lambdaforsingleton (v83:r)</td></tr><tr><td align="right" port="i130">130</td><td align="left">osipoint</td></tr><tr><td align="right" port="i131">131</td><td align="left">{v87&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i132">132</td><td align="left">setpropertycache (v87:r), (c), (v84:r) t=(v86&lt;g&gt;, v85&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i133">133</td><td align="left">osipoint</td></tr><tr><td align="right" port="i134">134</td><td align="left">{v88&lt;i&gt;} &lt;- integer</td></tr><tr><td align="right" port="i135">135</td><td align="left">goto s=(block2)</td></tr></table>> ] ;
  "Block1" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 1 </font></td></tr><tr><td align="right" port="i136">136</td><td align="left">{v90&lt;g&gt;:r9} &lt;- osrentry t=(v89&lt;g&gt;)</td></tr><tr><td align="right" port="i137">137</td><td align="left">{v91&lt;o&gt;} &lt;- osrenvironmentchain (v90:r)</td></tr><tr><td align="right" port="i138">138</td><td align="left">{v92&lt;x&gt;} &lt;- osrvalue (v90:r)</td></tr><tr><td align="right" port="i139">139</td><td align="left">{v93&lt;x&gt;} &lt;- osrvalue (v90:r)</td></tr><tr><td align="right" port="i140">140</td><td align="left">start</td></tr><tr><td align="right" port="i141">141</td><td align="left">{v94&lt;o&gt;} &lt;- unbox (v92:r)</td></tr><tr><td align="right" port="i142">142</td><td align="left">{v95&lt;i&gt;} &lt;- unbox (v93:r)</td></tr><tr><td align="right" port="i143">143</td><td align="left">goto s=(block2)</td></tr></table>> ] ;
  "Block2" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 2 </font></td></tr><tr><td align="right" port="i144">144</td><td align="left">{v96&lt;o&gt;} &lt;- phi (v84:r?), (v94:r?)</td></tr><tr><td align="right" port="i145">145</td><td align="left">{v97&lt;i&gt;} &lt;- phi (v88:r?), (v95:r?)</td></tr><tr><td align="right" port="i146">146</td><td align="left">goto s=(block3)</td></tr></table>> ] ;
  "Block3" [ color=green shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 3 </font></td></tr><tr><td align="right" port="i147">147</td><td align="left">{v98&lt;i&gt;} &lt;- phi (v97:r?), (v109:r?)</td></tr><tr><td align="right" port="i148">148</td><td align="left">interruptcheck</td></tr><tr><td align="right" port="i149">149</td><td align="left">osipoint</td></tr><tr><td align="right" port="i150">150</td><td align="left">compareandbranch (v98:r), (c) s=(block4, block5)</td></tr></table>> ] ;
  "Block4" [ color=red shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 4 </font></td></tr><tr><td align="right" port="i151">151</td><td align="left">{v99&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i152">152</td><td align="left">{v100&lt;s&gt;} &lt;- slots (v99:r)</td></tr><tr><td align="right" port="i153">153</td><td align="left">{v101&lt;o&gt;} &lt;- loadslott (v100:r)</td></tr><tr><td align="right" port="i154">154</td><td align="left">setpropertycache (v101:r), (c), (c) t=(v103&lt;g&gt;, v102&lt;d&gt;, bogus)</td></tr><tr><td align="right" port="i155">155</td><td align="left">osipoint</td></tr><tr><td align="right" port="i156">156</td><td align="left">{v104&lt;i&gt;:tied(0)} &lt;- bitopi (v98:r), (c)</td></tr><tr><td align="right" port="i157">157</td><td align="left">{v105&lt;i&gt;} &lt;- compare (v104:r), (c)</td></tr><tr><td align="right" port="i158">158</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i159">159</td><td align="left">stackargt (v105:r)</td></tr><tr><td align="right" port="i160">160</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i161">161</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i162">162</td><td align="left">{v108&lt;x&gt;:rcx} &lt;- callgeneric (v96:rax) t=(v107&lt;g&gt;:rdi, v106&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i163">163</td><td align="left">osipoint</td></tr><tr><td align="right" port="i164">164</td><td align="left">{v109&lt;i&gt;:tied(0)} &lt;- addi (v98:r), (c)</td></tr><tr><td align="right" port="i165">165</td><td align="left">goto s=(block3)</td></tr></table>> ] ;
  "Block5" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 5 </font></td></tr><tr><td align="right" port="i166">166</td><td align="left">{v111&lt;o&gt;} &lt;- pointer</td></tr><tr><td align="right" port="i167">167</td><td align="left">{v112&lt;x&gt;} &lt;- getnamecache (v111:r) t=(v110&lt;g&gt;)</td></tr><tr><td align="right" port="i168">168</td><td align="left">osipoint</td></tr><tr><td align="right" port="i169">169</td><td align="left">{bogus} &lt;- typebarrierv (v112:r) t=(v113&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i170">170</td><td align="left">{v114&lt;x&gt;:rcx} &lt;- callgetproperty (v112:r)</td></tr><tr><td align="right" port="i171">171</td><td align="left">osipoint</td></tr><tr><td align="right" port="i172">172</td><td align="left">{bogus} &lt;- typebarrierv (v114:r) t=(v115&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i173">173</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i174">174</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i175">175</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i176">176</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i177">177</td><td align="left">{v118&lt;x&gt;:rcx} &lt;- callgeneric (v96:rax) t=(v117&lt;g&gt;:rdi, v116&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i178">178</td><td align="left">osipoint</td></tr><tr><td align="right" port="i179">179</td><td align="left">{bogus} &lt;- typebarrierv (v118:r) t=(v119&lt;g&gt;, bogus)</td></tr><tr><td align="right" port="i180">180</td><td align="left">{v120&lt;o&gt;} &lt;- unbox (v114:r)</td></tr><tr><td align="right" port="i181">181</td><td align="left">stackargv (v112:r)</td></tr><tr><td align="right" port="i182">182</td><td align="left">stackargv (v118:r)</td></tr><tr><td align="right" port="i183">183</td><td align="left">{v123&lt;x&gt;:rcx} &lt;- callgeneric (v120:rax) t=(v122&lt;g&gt;:rdi, v121&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i184">184</td><td align="left">osipoint</td></tr><tr><td align="right" port="i185">185</td><td align="left">{v124&lt;x&gt;} &lt;- value</td></tr><tr><td align="right" port="i186">186</td><td align="left">return (v124:rcx)</td></tr></table>> ] ;

  "Block0" -> "Block2" ;
  "Block1" -> "Block2" ;
  "Block2" -> "Block3" ;
  "Block3" -> "Block4" [ color=green label=1 ] ;
  "Block3" -> "Block5" [ color=red label=0 ] ;
  "Block4" -> "Block3" ;
}
