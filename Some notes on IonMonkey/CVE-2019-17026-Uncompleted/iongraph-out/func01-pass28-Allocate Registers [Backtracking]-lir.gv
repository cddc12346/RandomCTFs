digraph {
labelloc = t;
labelfontsize = 30;
label = "exploit.js:1 -  Allocate Registers [Backtracking]";
  rankdir=TB
  splines=true

  "Block0" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 0 </font></td></tr><tr><td align="right" port="i1">1</td><td align="left">start</td></tr><tr><td align="right" port="i2">2</td><td align="left">checkoverrecursed</td></tr><tr><td align="right" port="i3">3</td><td align="left">osipoint</td></tr><tr><td align="right" port="i4">4</td><td align="left">globalnameconflictscheck</td></tr><tr><td align="right" port="i5">5</td><td align="left">osipoint</td></tr><tr><td align="right" port="i6">6</td><td align="left">{v1&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i7">7</td><td align="left">defvar (rax)</td></tr><tr><td align="right" port="i8">8</td><td align="left">osipoint</td></tr><tr><td align="right" port="i9">9</td><td align="left">{v2&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i10">10</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i11">11</td><td align="left">osipoint</td></tr><tr><td align="right" port="i12">12</td><td align="left">{v3&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i13">13</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i14">14</td><td align="left">osipoint</td></tr><tr><td align="right" port="i15">15</td><td align="left">{v4&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i16">16</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i17">17</td><td align="left">osipoint</td></tr><tr><td align="right" port="i18">18</td><td align="left">{v5&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i19">19</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i20">20</td><td align="left">osipoint</td></tr><tr><td align="right" port="i21">21</td><td align="left">{v6&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i22">22</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i23">23</td><td align="left">osipoint</td></tr><tr><td align="right" port="i24">24</td><td align="left">{v7&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i25">25</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i26">26</td><td align="left">osipoint</td></tr><tr><td align="right" port="i27">27</td><td align="left">{v8&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i28">28</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i29">29</td><td align="left">osipoint</td></tr><tr><td align="right" port="i30">30</td><td align="left">{v9&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i31">31</td><td align="left">deflexical (rax)</td></tr><tr><td align="right" port="i32">32</td><td align="left">osipoint</td></tr><tr><td align="right" port="i33">33</td><td align="left">{v10&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i34">34</td><td align="left">{v11&lt;o&gt;:rax} &lt;- lambdaforsingleton (rax)</td></tr><tr><td align="right" port="i35">35</td><td align="left">osipoint</td></tr><tr><td align="right" port="i36">36</td><td align="left">{v12&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i37">37</td><td align="left">deffun (rax), (rcx)</td></tr><tr><td align="right" port="i38">38</td><td align="left">osipoint</td></tr><tr><td align="right" port="i39">39</td><td align="left">{v13&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i40">40</td><td align="left">{v14&lt;o&gt;:rax} &lt;- lambdaforsingleton (rax)</td></tr><tr><td align="right" port="i41">41</td><td align="left">osipoint</td></tr><tr><td align="right" port="i42">42</td><td align="left">{v15&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i43">43</td><td align="left">deffun (rax), (rcx)</td></tr><tr><td align="right" port="i44">44</td><td align="left">osipoint</td></tr><tr><td align="right" port="i45">45</td><td align="left">{v17&lt;o&gt;:rax} &lt;- newarray t=(v16&lt;g&gt;:rcx)</td></tr><tr><td align="right" port="i46">46</td><td align="left">osipoint</td></tr><tr><td align="right" port="i47">47</td><td align="left">{v20&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i48">48</td><td align="left">setpropertycache (rcx), (c), (rax) t=(v19&lt;g&gt;:rdx, v18&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i49">49</td><td align="left">osipoint</td></tr><tr><td align="right" port="i50">50</td><td align="left">{v22&lt;o&gt;:rcx} &lt;- newarray t=(v21&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i51">51</td><td align="left">osipoint</td></tr><tr><td align="right" port="i52">52</td><td align="left">{v23&lt;d&gt;:%xmm0.d} &lt;- double</td></tr><tr><td align="right" port="i53">53</td><td align="left">{v24&lt;s&gt;:rax} &lt;- elements (rcx)</td></tr><tr><td align="right" port="i54">54</td><td align="left">storeelementt (rax), (c), (%xmm0.d)</td></tr><tr><td align="right" port="i55">55</td><td align="left">setinitializedlength (rax), (c)</td></tr><tr><td align="right" port="i56">56</td><td align="left">{v25&lt;s&gt;:rax} &lt;- elements (rcx)</td></tr><tr><td align="right" port="i57">57</td><td align="left">storeelementt (rax), (c), (%xmm0.d)</td></tr><tr><td align="right" port="i58">58</td><td align="left">setinitializedlength (rax), (c)</td></tr><tr><td align="right" port="i59">59</td><td align="left">{v26&lt;s&gt;:rax} &lt;- elements (rcx)</td></tr><tr><td align="right" port="i60">60</td><td align="left">storeelementt (rax), (c), (c)</td></tr><tr><td align="right" port="i61">61</td><td align="left">setinitializedlength (rax), (c)</td></tr><tr><td align="right" port="i62">62</td><td align="left">{v27&lt;s&gt;:rax} &lt;- elements (rcx)</td></tr><tr><td align="right" port="i63">63</td><td align="left">storeelementt (rax), (c), (%xmm0.d)</td></tr><tr><td align="right" port="i64">64</td><td align="left">setinitializedlength (rax), (c)</td></tr><tr><td align="right" port="i65">65</td><td align="left">{v30&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i66">66</td><td align="left">setpropertycache (rax), (c), (rcx) t=(v29&lt;g&gt;:rdx, v28&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i67">67</td><td align="left">osipoint</td></tr><tr><td align="right" port="i68">68</td><td align="left">{v32&lt;o&gt;:rax} &lt;- newarray t=(v31&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i69">69</td><td align="left">osipoint</td></tr><tr><td align="right" port="i70">70</td><td align="left">{v33&lt;d&gt;:%xmm0.d} &lt;- double</td></tr><tr><td align="right" port="i71">71</td><td align="left">{v34&lt;s&gt;:rcx} &lt;- elements (rax)</td></tr><tr><td align="right" port="i72">72</td><td align="left">storeelementt (rcx), (c), (%xmm0.d)</td></tr><tr><td align="right" port="i73">73</td><td align="left">setinitializedlength (rcx), (c)</td></tr><tr><td align="right" port="i74">74</td><td align="left">{v35&lt;s&gt;:rcx} &lt;- elements (rax)</td></tr><tr><td align="right" port="i75">75</td><td align="left">storeelementt (rcx), (c), (%xmm0.d)</td></tr><tr><td align="right" port="i76">76</td><td align="left">setinitializedlength (rcx), (c)</td></tr><tr><td align="right" port="i77">77</td><td align="left">{v36&lt;s&gt;:rcx} &lt;- elements (rax)</td></tr><tr><td align="right" port="i78">78</td><td align="left">storeelementt (rcx), (c), (c)</td></tr><tr><td align="right" port="i79">79</td><td align="left">setinitializedlength (rcx), (c)</td></tr><tr><td align="right" port="i80">80</td><td align="left">{v37&lt;s&gt;:rcx} &lt;- elements (rax)</td></tr><tr><td align="right" port="i81">81</td><td align="left">storeelementt (rcx), (c), (%xmm0.d)</td></tr><tr><td align="right" port="i82">82</td><td align="left">setinitializedlength (rcx), (c)</td></tr><tr><td align="right" port="i83">83</td><td align="left">{v40&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i84">84</td><td align="left">setpropertycache (rcx), (c), (rax) t=(v39&lt;g&gt;:rdx, v38&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i85">85</td><td align="left">osipoint</td></tr><tr><td align="right" port="i86">86</td><td align="left">{v42&lt;o&gt;:rcx} &lt;- newarray t=(v41&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i87">87</td><td align="left">osipoint</td></tr><tr><td align="right" port="i88">88</td><td align="left">{v45&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i89">89</td><td align="left">setpropertycache (rax), (c), (rcx) t=(v44&lt;g&gt;:rdx, v43&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i90">90</td><td align="left">osipoint</td></tr><tr><td align="right" port="i91">91</td><td align="left">{v47&lt;o&gt;:rax} &lt;- newarray t=(v46&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i92">92</td><td align="left">osipoint</td></tr><tr><td align="right" port="i93">93</td><td align="left">{v50&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i94">94</td><td align="left">setpropertycache (rcx), (c), (rax) t=(v49&lt;g&gt;:rdx, v48&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i95">95</td><td align="left">osipoint</td></tr><tr><td align="right" port="i96">96</td><td align="left">{v52&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i97">97</td><td align="left">{v53&lt;x&gt;:rax} &lt;- getnamecache (rcx) t=(v51&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i98">98</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:8, x]</td></tr><tr><td align="right" port="i99">99</td><td align="left">{bogus} &lt;- typebarrierv (rax) t=(v54&lt;g&gt;:rcx, bogus)</td></tr><tr><td align="right" port="i100">100</td><td align="left">{v55&lt;o&gt;:rax} &lt;- unbox (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:16, o]</td></tr><tr><td align="right" port="i101">101</td><td align="left">{v56&lt;x&gt;:rcx} &lt;- createthis (rax), (rax)</td></tr><tr><td align="right" port="i102">102</td><td align="left">osipoint</td></tr><tr><td align="right" port="i103">103</td><td align="left">stackargv (rcx)</td></tr><tr><td align="right" port="i104">104</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:8 -&gt; rax, x]</td></tr><tr><td align="right" port="i105">105</td><td align="left">stackargv (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:16 -&gt; rax, o]</td></tr><tr><td align="right" port="i106">106</td><td align="left">{v59&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v58&lt;g&gt;:rdi, v57&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i107">107</td><td align="left">osipoint</td></tr><tr><td align="right" port="i108">108</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v60&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i109">109</td><td align="left">{v63&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i110">110</td><td align="left">setpropertycache (rax), (c), (rcx) t=(v62&lt;g&gt;:rdx, v61&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i111">111</td><td align="left">osipoint</td></tr><tr><td align="right" port="i112">112</td><td align="left">{v65&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i113">113</td><td align="left">{v66&lt;x&gt;:rax} &lt;- getnamecache (rcx) t=(v64&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i114">114</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:16, x]</td></tr><tr><td align="right" port="i115">115</td><td align="left">{bogus} &lt;- typebarrierv (rax) t=(v67&lt;g&gt;:rcx, bogus)</td></tr><tr><td align="right" port="i116">116</td><td align="left">{v68&lt;o&gt;:rax} &lt;- unbox (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:8, o]</td></tr><tr><td align="right" port="i117">117</td><td align="left">{v69&lt;x&gt;:rcx} &lt;- createthis (rax), (rax)</td></tr><tr><td align="right" port="i118">118</td><td align="left">osipoint</td></tr><tr><td align="right" port="i119">119</td><td align="left">stackargv (rcx)</td></tr><tr><td align="right" port="i120">120</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:16 -&gt; rax, x]</td></tr><tr><td align="right" port="i121">121</td><td align="left">stackargv (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:8 -&gt; rax, o]</td></tr><tr><td align="right" port="i122">122</td><td align="left">{v72&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v71&lt;g&gt;:rdi, v70&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i123">123</td><td align="left">osipoint</td></tr><tr><td align="right" port="i124">124</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v73&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i125">125</td><td align="left">{v76&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i126">126</td><td align="left">setpropertycache (rax), (c), (rcx) t=(v75&lt;g&gt;:rdx, v74&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i127">127</td><td align="left">osipoint</td></tr><tr><td align="right" port="i128">128</td><td align="left">{v79&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i129">129</td><td align="left">setpropertycache (rax), (c), (c) t=(v78&lt;g&gt;:rcx, v77&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i130">130</td><td align="left">osipoint</td></tr><tr><td align="right" port="i131">131</td><td align="left">{v80&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i132">132</td><td align="left">{v81&lt;s&gt;:rax} &lt;- slots (rax)</td></tr><tr><td align="right" port="i133">133</td><td align="left">{v82&lt;o&gt;:rcx} &lt;- loadslott (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rcx -&gt; stack:8, o]</td></tr><tr><td align="right" port="i134">134</td><td align="left">{v83&lt;x&gt;:rax} &lt;- box (rcx)</td></tr><tr><td align="right" port="i135">135</td><td align="left">{v84&lt;x&gt;:rcx} &lt;- callgetproperty (rax)</td></tr><tr><td align="right" port="i136">136</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rcx -&gt; stack:16, x]</td></tr><tr><td align="right" port="i137">137</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v85&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i138">138</td><td align="left">{v86&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i139">139</td><td align="left">{v87&lt;o&gt;:rax} &lt;- lambdaforsingleton (rax)</td></tr><tr><td align="right" port="i140">140</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:16 -&gt; rax, x], [rax -&gt; rdx, o]</td></tr><tr><td align="right" port="i141">141</td><td align="left">{v88&lt;o&gt;:rax} &lt;- unbox (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:8 -&gt; rcx, o]</td></tr><tr><td align="right" port="i142">142</td><td align="left">stackargt (rcx)</td></tr><tr><td align="right" port="i143">143</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rdx -&gt; rcx, o]</td></tr><tr><td align="right" port="i144">144</td><td align="left">stackargt (rcx)</td></tr><tr><td align="right" port="i145">145</td><td align="left">{v91&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v90&lt;g&gt;:rdi, v89&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i146">146</td><td align="left">osipoint</td></tr><tr><td align="right" port="i147">147</td><td align="left">{v92&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i148">148</td><td align="left">{v93&lt;o&gt;:rax} &lt;- lambdaforsingleton (rax)</td></tr><tr><td align="right" port="i149">149</td><td align="left">osipoint</td></tr><tr><td align="right" port="i150">150</td><td align="left">{v96&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i151">151</td><td align="left">setpropertycache (rcx), (c), (rax) t=(v95&lt;g&gt;:rdx, v94&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i152">152</td><td align="left">osipoint</td></tr><tr><td align="right" port="i153">153</td><td align="left">{v97&lt;i&gt;:rcx} &lt;- integer</td></tr><tr><td align="right" port="i154">154</td><td align="left">goto s=(block2)</td></tr></table>> ] ;
  "Block1" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 1 </font></td></tr><tr><td align="right" port="i155">155</td><td align="left">{v99&lt;g&gt;:r9} &lt;- osrentry t=(v98&lt;g&gt;:rax)</td></tr><tr><td align="right" port="i156">156</td><td align="left">{v100&lt;o&gt;:rdx} &lt;- osrenvironmentchain (r9)</td></tr><tr><td align="right" port="i157">157</td><td align="left">{v101&lt;x&gt;:rbx} &lt;- osrvalue (r9)</td></tr><tr><td align="right" port="i158">158</td><td align="left">{v102&lt;x&gt;:rbp} &lt;- osrvalue (r9)</td></tr><tr><td align="right" port="i159">159</td><td align="left">start</td></tr><tr><td align="right" port="i160">160</td><td align="left">{v103&lt;o&gt;:rax} &lt;- unbox (rbx)</td></tr><tr><td align="right" port="i161">161</td><td align="left">{v104&lt;i&gt;:rcx} &lt;- unbox (rbp)</td></tr><tr><td align="right" port="i162">162</td><td align="left">goto s=(block2)</td></tr></table>> ] ;
  "Block2" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 2 </font></td></tr><tr><td align="right" port="i163">163</td><td align="left">{v105&lt;o&gt;} &lt;- phi (v93:r?), (v103:r?)</td></tr><tr><td align="right" port="i164">164</td><td align="left">{v106&lt;i&gt;} &lt;- phi (v97:r?), (v104:r?)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rcx -&gt; stack:20, i], [rax -&gt; stack:16, o]</td></tr><tr><td align="right" port="i165">165</td><td align="left">goto s=(block3)</td></tr></table>> ] ;
  "Block3" [ color=green shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 3 </font></td></tr><tr><td align="right" port="i166">166</td><td align="left">{v107&lt;i&gt;} &lt;- phi (v106:r?), (v118:r?)</td></tr><tr><td align="right" port="i167">167</td><td align="left">interruptcheck</td></tr><tr><td align="right" port="i168">168</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:20 -&gt; rax, i]</td></tr><tr><td align="right" port="i169">169</td><td align="left">compareandbranch (rax), (c) s=(block4, block5)</td></tr></table>> ] ;
  "Block4" [ color=red shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 4 </font></td></tr><tr><td align="right" port="i170">170</td><td align="left">{v108&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i171">171</td><td align="left">{v109&lt;s&gt;:rdx} &lt;- slots (rax)</td></tr><tr><td align="right" port="i172">172</td><td align="left">{v110&lt;o&gt;:rax} &lt;- loadslott (rdx)</td></tr><tr><td align="right" port="i173">173</td><td align="left">setpropertycache (rax), (c), (c) t=(v112&lt;g&gt;:rcx, v111&lt;d&gt;:%xmm0.d, bogus)</td></tr><tr><td align="right" port="i174">174</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:20 -&gt; rdx, i]</td></tr><tr><td align="right" port="i175">175</td><td align="left">{v113&lt;i&gt;:rdx} &lt;- bitopi (rdx), (c)</td></tr><tr><td align="right" port="i176">176</td><td align="left">{v114&lt;i&gt;:rax} &lt;- compare (rdx), (c)</td></tr><tr><td align="right" port="i177">177</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i178">178</td><td align="left">stackargt (rax)</td></tr><tr><td align="right" port="i179">179</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i180">180</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:16 -&gt; rax, o]</td></tr><tr><td align="right" port="i181">181</td><td align="left">{v117&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v116&lt;g&gt;:rdi, v115&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i182">182</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:20 -&gt; rax, i]</td></tr><tr><td align="right" port="i183">183</td><td align="left">{v118&lt;i&gt;:rax} &lt;- addi (rax), (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:20, i]</td></tr><tr><td align="right" port="i184">184</td><td align="left">goto s=(block3)</td></tr></table>> ] ;
  "Block5" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 5 </font></td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:20, i]</td></tr><tr><td align="right" port="i185">185</td><td align="left">{v120&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i186">186</td><td align="left">{v121&lt;x&gt;:rax} &lt;- getnamecache (rcx) t=(v119&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i187">187</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:8, x]</td></tr><tr><td align="right" port="i188">188</td><td align="left">{bogus} &lt;- typebarrierv (rax) t=(v122&lt;g&gt;:rcx, bogus)</td></tr><tr><td align="right" port="i189">189</td><td align="left">{v123&lt;x&gt;:rcx} &lt;- callgetproperty (rax)</td></tr><tr><td align="right" port="i190">190</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rcx -&gt; stack:32, x]</td></tr><tr><td align="right" port="i191">191</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v124&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i192">192</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i193">193</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i194">194</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i195">195</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:16 -&gt; rax, o]</td></tr><tr><td align="right" port="i196">196</td><td align="left">{v127&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v126&lt;g&gt;:rdi, v125&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i197">197</td><td align="left">osipoint</td></tr><tr><td align="right" port="i198">198</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v128&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:32 -&gt; rax, x]</td></tr><tr><td align="right" port="i199">199</td><td align="left">{v129&lt;o&gt;:rax} &lt;- unbox (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:8 -&gt; rdx, x]</td></tr><tr><td align="right" port="i200">200</td><td align="left">stackargv (rdx)</td></tr><tr><td align="right" port="i201">201</td><td align="left">stackargv (rcx)</td></tr><tr><td align="right" port="i202">202</td><td align="left">{v132&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v131&lt;g&gt;:rdi, v130&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i203">203</td><td align="left">osipoint</td></tr><tr><td align="right" port="i204">204</td><td align="left">{v133&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i205">205</td><td align="left">{v134&lt;s&gt;:rdx} &lt;- slots (rax)</td></tr><tr><td align="right" port="i206">206</td><td align="left">{v135&lt;o&gt;:rax} &lt;- loadslott (rdx)</td></tr><tr><td align="right" port="i207">207</td><td align="left">{v136&lt;s&gt;:rdx} &lt;- elements (rax)</td></tr><tr><td align="right" port="i208">208</td><td align="left">{v137&lt;i&gt;:rbx} &lt;- initializedlength (rdx)</td></tr><tr><td align="right" port="i209">209</td><td align="left">boundscheck (c), (rbx)</td></tr><tr><td align="right" port="i210">210</td><td align="left">{v138&lt;i&gt;:rsi} &lt;- integer</td></tr><tr><td align="right" port="i211">211</td><td align="left">{v139&lt;i&gt;:rbp} &lt;- spectremaskindex (rsi), (rbx)</td></tr><tr><td align="right" port="i212">212</td><td align="left">{v140&lt;x&gt;:rbx} &lt;- loadelementv (rdx), (rbp)</td></tr><tr><td align="right" port="i213">213</td><td align="left">keepaliveobject (rax)</td></tr><tr><td align="right" port="i214">214</td><td align="left">{bogus} &lt;- typebarrierv (rbx) t=(v141&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i215">215</td><td align="left">{v142&lt;x&gt;:rax} &lt;- value</td></tr><tr><td align="right" port="i216">216</td><td align="left">comparebitwiseandbranch (rbx), (rax) s=(block7, block6)</td></tr></table>> ] ;
  "Block6" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 6 </font></td></tr><tr><td align="right" port="i217">217</td><td align="left">goto s=(block8)</td></tr></table>> ] ;
  "Block7" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 7 </font></td></tr><tr><td align="right" port="i218">218</td><td align="left">{v144&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i219">219</td><td align="left">{v145&lt;x&gt;:rax} &lt;- getnamecache (rcx) t=(v143&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i220">220</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:32, x]</td></tr><tr><td align="right" port="i221">221</td><td align="left">{bogus} &lt;- typebarrierv (rax) t=(v146&lt;g&gt;:rcx, bogus)</td></tr><tr><td align="right" port="i222">222</td><td align="left">{v147&lt;x&gt;:rcx} &lt;- callgetproperty (rax)</td></tr><tr><td align="right" port="i223">223</td><td align="left">osipoint</td></tr><tr><td align="right" port="i224">224</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v148&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i225">225</td><td align="left">{v149&lt;o&gt;:rax} &lt;- unbox (rcx)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:32 -&gt; rcx, x]</td></tr><tr><td align="right" port="i226">226</td><td align="left">stackargv (rcx)</td></tr><tr><td align="right" port="i227">227</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i228">228</td><td align="left">{v152&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v151&lt;g&gt;:rdi, v150&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i229">229</td><td align="left">osipoint</td></tr><tr><td align="right" port="i230">230</td><td align="left">{v154&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i231">231</td><td align="left">{v155&lt;x&gt;:rax} &lt;- getnamecache (rcx) t=(v153&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i232">232</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:32, x]</td></tr><tr><td align="right" port="i233">233</td><td align="left">{bogus} &lt;- typebarrierv (rax) t=(v156&lt;g&gt;:rcx, bogus)</td></tr><tr><td align="right" port="i234">234</td><td align="left">{v157&lt;x&gt;:rcx} &lt;- callgetproperty (rax)</td></tr><tr><td align="right" port="i235">235</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rcx -&gt; stack:8, x]</td></tr><tr><td align="right" port="i236">236</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v158&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i237">237</td><td align="left">{v159&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i238">238</td><td align="left">{v160&lt;s&gt;:rax} &lt;- slots (rax)</td></tr><tr><td align="right" port="i239">239</td><td align="left">{v161&lt;o&gt;:rcx} &lt;- loadslott (rax)</td></tr><tr><td align="right" port="i240">240</td><td align="left">{v162&lt;x&gt;:rax} &lt;- box (rcx)</td></tr><tr><td align="right" port="i241">241</td><td align="left">{v163&lt;x&gt;:rcx} &lt;- callgetproperty (rax)</td></tr><tr><td align="right" port="i242">242</td><td align="left">osipoint</td></tr><tr><td align="right" port="i243">243</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v164&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:8 -&gt; rax, x]</td></tr><tr><td align="right" port="i244">244</td><td align="left">{v165&lt;o&gt;:rax} &lt;- unbox (rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:32 -&gt; rdx, x]</td></tr><tr><td align="right" port="i245">245</td><td align="left">stackargv (rdx)</td></tr><tr><td align="right" port="i246">246</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i247">247</td><td align="left">stackargv (rcx)</td></tr><tr><td align="right" port="i248">248</td><td align="left">{v168&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v167&lt;g&gt;:rdi, v166&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i249">249</td><td align="left">osipoint</td></tr><tr><td align="right" port="i250">250</td><td align="left">{v170&lt;o&gt;:rcx} &lt;- pointer</td></tr><tr><td align="right" port="i251">251</td><td align="left">{v171&lt;x&gt;:rax} &lt;- getnamecache (rcx) t=(v169&lt;g&gt;:rdx)</td></tr><tr><td align="right" port="i252">252</td><td align="left">osipoint</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [rax -&gt; stack:8, x]</td></tr><tr><td align="right" port="i253">253</td><td align="left">{bogus} &lt;- typebarrierv (rax) t=(v172&lt;g&gt;:rcx, bogus)</td></tr><tr><td align="right" port="i254">254</td><td align="left">{v173&lt;x&gt;:rcx} &lt;- callgetproperty (rax)</td></tr><tr><td align="right" port="i255">255</td><td align="left">osipoint</td></tr><tr><td align="right" port="i256">256</td><td align="left">{bogus} &lt;- typebarrierv (rcx) t=(v174&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i257">257</td><td align="left">{v175&lt;o&gt;:rax} &lt;- pointer</td></tr><tr><td align="right" port="i258">258</td><td align="left">{v176&lt;s&gt;:rdx} &lt;- slots (rax)</td></tr><tr><td align="right" port="i259">259</td><td align="left">{v177&lt;o&gt;:rax} &lt;- loadslott (rdx)</td></tr><tr><td align="right" port="i260">260</td><td align="left">{v178&lt;s&gt;:rbx} &lt;- elements (rax)</td></tr><tr><td align="right" port="i261">261</td><td align="left">{v179&lt;i&gt;:rdx} &lt;- initializedlength (rbx)</td></tr><tr><td align="right" port="i262">262</td><td align="left">boundscheck (c), (rdx)</td></tr><tr><td align="right" port="i263">263</td><td align="left">{v180&lt;i&gt;:rsi} &lt;- integer</td></tr><tr><td align="right" port="i264">264</td><td align="left">{v181&lt;i&gt;:rbp} &lt;- spectremaskindex (rsi), (rdx)</td></tr><tr><td align="right" port="i265">265</td><td align="left">{v182&lt;x&gt;:rdx} &lt;- loadelementv (rbx), (rbp)</td></tr><tr><td align="right" port="i266">266</td><td align="left">keepaliveobject (rax)</td></tr><tr><td align="right" port="i267">267</td><td align="left">{bogus} &lt;- typebarrierv (rdx) t=(v183&lt;g&gt;:rax, bogus)</td></tr><tr><td align="right" port="i268">268</td><td align="left">{v184&lt;o&gt;:rax} &lt;- unbox (rcx)</td></tr><tr><td align="right" port="i0">0</td><td align="left">movegroup [stack:8 -&gt; rcx, x]</td></tr><tr><td align="right" port="i269">269</td><td align="left">stackargv (rcx)</td></tr><tr><td align="right" port="i270">270</td><td align="left">stackargt (c)</td></tr><tr><td align="right" port="i271">271</td><td align="left">stackargv (rdx)</td></tr><tr><td align="right" port="i272">272</td><td align="left">{v187&lt;x&gt;:rcx} &lt;- callgeneric (rax) t=(v186&lt;g&gt;:rdi, v185&lt;g&gt;:rbx)</td></tr><tr><td align="right" port="i273">273</td><td align="left">osipoint</td></tr><tr><td align="right" port="i274">274</td><td align="left">goto s=(block8)</td></tr></table>> ] ;
  "Block8" [ shape=box fontsize=20 fontname="Consolas Bold" label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 8 </font></td></tr><tr><td align="right" port="i275">275</td><td align="left">{v188&lt;x&gt;:rcx} &lt;- value</td></tr><tr><td align="right" port="i276">276</td><td align="left">return (rcx)</td></tr></table>> ] ;

  "Block0" -> "Block2" ;
  "Block1" -> "Block2" ;
  "Block2" -> "Block3" ;
  "Block3" -> "Block4" [ color=green label=1 ] ;
  "Block3" -> "Block5" [ color=red label=0 ] ;
  "Block4" -> "Block3" ;
  "Block5" -> "Block7" [ color=green label=1 ] ;
  "Block5" -> "Block6" [ color=red label=0 ] ;
  "Block6" -> "Block8" ;
  "Block7" -> "Block8" ;
}
